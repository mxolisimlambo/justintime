@model WebApp.Models.AttendViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_school.cshtml";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Attend</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.StudentNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StudentNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StudentNo, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.StudentName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StudentName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StudentName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.GradeGroupID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GradeGroupID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GradeGroupID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Day, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Day", new List<SelectListItem>
            {
           new SelectListItem {Text="Monday", Value="Monday"},
           new SelectListItem {Text="Tuesday", Value="Tuesday"},
           new SelectListItem {Text="Wenesday", Value="Wenesday"},
           new SelectListItem {Text="Thursday", Value="Thursday"},
           new SelectListItem {Text="Friday", Value="Friday"},
            }, "Select Day")
                @*@Html.EditorFor(model => model.Day, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Day, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Attends, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.RadioButtonFor(g => g.Attends, "Yes")@Html.Label("Yes")
            @Html.RadioButtonFor(g => g.Attends, "No")@Html.Label("NO")
            <div class="col-md-10">
                <div class="RadioButton">

                    @Html.ValidationMessageFor(model => model.Attends)
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Absent, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.RadioButtonFor(g => g.Absent, "Yes")@Html.Label("Yes")
            @Html.RadioButtonFor(g => g.Absent, "No")@Html.Label("NO")


            <div class="col-md-10">
                <div class="RadioButton">

                    @Html.ValidationMessageFor(model => model.Absent)
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Await, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.RadioButtonFor(g => g.Await, "Yes")@Html.Label("Yes")
            @Html.RadioButtonFor(g => g.Await, "No")@Html.Label("No")
            <div class="col-md-10">
                <div class="RadioButton">
                    @Html.ValidationMessageFor(model => model.Await)
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Remark, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Remark, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
